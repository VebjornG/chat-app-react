{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vebjorng/testapp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport './App.css'; //import SignIn from \"./signin/signin\"\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport HeaderComponent from \"./components/header/header\";\nimport Layout from \"./components/layout/layout\";\nimport Card from \"./components/card/card\";\nimport { StyledLink, HeaderButton } from \"./components/header/headerStyles\";\nimport { Container, Section, DivChatArea, DivChatHeader, DivMessageSections, TextMessage, DivChatControls, Textarea, Button, DivUsers, DivName, DivPic, Image, DivUserInfo } from \"./styles/chatStyles\";\nimport { ContainerSignIn, CardButton, Form } from \"./components/card/cardStyles\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCW1V-XomyFj_pfzJg1WVxeVWJB7b7ARZI\",\n  authDomain: \"chat-for-testapp.firebaseapp.com\",\n  databaseURL: \"https://chat-for-testapp.firebaseio.com\",\n  projectId: \"chat-for-testapp\",\n  storageBucket: \"chat-for-testapp.appspot.com\",\n  messagingSenderId: \"285672943459\",\n  appId: \"1:285672943459:web:6942bbd53520a9ccdaed56\",\n  measurementId: \"G-VS992604ML\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user ? /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n        children: /*#__PURE__*/_jsxDEV(SignOut, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c = App;\n\nconst SignIn = () => {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerSignIn, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardButton, {\n          onClick: signInWithGoogle,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SignIn;\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(StyledLink, {\n    onClick: () => auth.signOut(),\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SignOut;\n\nfunction ChatRoom() {\n  _s2();\n\n  const [formValue, setFormValue] = useState('');\n  const [messagesEnd, setMessagesEnd] = useState();\n  const dummy = useRef(); // Reference to\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  console.log(messages);\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  const messagesEndRef = useRef(null); // Make new ref for scrolldown function\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const person = messages ? messages.filter(message => message.uid !== auth.currentUser.uid)[0] : null;\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(DivUsers, {\n      children: person &&\n      /*#__PURE__*/\n      //messages.filter(message => message.uid !== auth.currentUser.uid).map(message => {\n      //return (\n      _jsxDEV(DivName, {\n        children: [/*#__PURE__*/_jsxDEV(DivPic, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DivUserInfo, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 500\n            },\n            children: person.uid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)]\n      }, person.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this) //)\n      //})\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DivChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(DivMessageSections, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextMessage, {\n            children: [messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n              message: msg\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 60\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: dummy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                float: \"left\",\n                clear: \"both\"\n              },\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DivChatControls, {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Happy chatting!\",\n          value: formValue,\n          onChange: e => setFormValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ChatRoom, \"W+8mefa0SHGyk8GYMBN+VW15mhk=\", false, function () {\n  return [useCollectionData];\n});\n\n_c4 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL\n  } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${messageClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SignIn\");\n$RefreshReg$(_c3, \"SignOut\");\n$RefreshReg$(_c4, \"ChatRoom\");\n$RefreshReg$(_c5, \"ChatMessage\");","map":{"version":3,"sources":["/home/vebjorng/testapp/src/App.js"],"names":["React","useEffect","useRef","useState","firebase","useAuthState","useCollectionData","HeaderComponent","Layout","Card","StyledLink","HeaderButton","Container","Section","DivChatArea","DivChatHeader","DivMessageSections","TextMessage","DivChatControls","Textarea","Button","DivUsers","DivName","DivPic","Image","DivUserInfo","ContainerSignIn","CardButton","Form","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","user","SignIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","formValue","setFormValue","messagesEnd","setMessagesEnd","dummy","messagesRef","collection","query","orderBy","limit","messages","idField","console","log","sendMessage","e","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","messagesEndRef","scrollToBottom","person","filter","message","fontWeight","textAlign","map","msg","id","float","clear","target","value","ChatMessage","props","messageClass"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n//import SignIn from \"./signin/signin\"\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport HeaderComponent from \"./components/header/header\"\nimport Layout from \"./components/layout/layout\"\nimport Card from \"./components/card/card\"\n\nimport { StyledLink, HeaderButton } from \"./components/header/headerStyles\"\n\nimport {  Container, \n          Section,\n          DivChatArea,\n          DivChatHeader,\n          DivMessageSections,\n          TextMessage,\n          DivChatControls,\n          Textarea,\n          Button,\n          DivUsers, \n          DivName,\n          DivPic,\n          Image,\n          DivUserInfo} from \"./styles/chatStyles\"\n\nimport {  ContainerSignIn,\n          CardButton,\n          Form } from \"./components/card/cardStyles\"\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCW1V-XomyFj_pfzJg1WVxeVWJB7b7ARZI\",\n    authDomain: \"chat-for-testapp.firebaseapp.com\",\n    databaseURL: \"https://chat-for-testapp.firebaseio.com\",\n    projectId: \"chat-for-testapp\",\n    storageBucket: \"chat-for-testapp.appspot.com\",\n    messagingSenderId: \"285672943459\",\n    appId: \"1:285672943459:web:6942bbd53520a9ccdaed56\",\n    measurementId: \"G-VS992604ML\"\n})\n\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth)\n\n  return (\n    <div className=\"App\">\n\n      {user ? \n        ( <Layout>\n            <HeaderComponent>\n              <SignOut />\n            </HeaderComponent>\n            \n            <ChatRoom />\n          </Layout>) : (<SignIn/>)}  \n    </div>\n  );\n}\n\nconst SignIn = () => {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <Layout>\n      <HeaderComponent/>\n\n      <ContainerSignIn>\n        <Card>\n            <CardButton onClick={signInWithGoogle}>Sign in with Google</CardButton>\n        </Card>\n      </ContainerSignIn>\n    </Layout>\n  )\n}\n\n\nfunction SignOut() {\n  return auth.currentUser && (\n\n    <StyledLink onClick={() => auth.signOut()}>Logout</StyledLink>\n  )\n}\n\n\nfunction ChatRoom () {\n  const [formValue, setFormValue] = useState('');\n  const [messagesEnd, setMessagesEnd] = useState()\n\n  const dummy = useRef()                      // Reference to\n   \n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n\n  console.log(messages)\n\n\n\n\n  const sendMessage = async(e) => {\n\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n    \n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid, \n      photoURL\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  const messagesEndRef = useRef(null)         // Make new ref for scrolldown function\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n\n    scrollToBottom();\n\n  }, [messages])\n\n\n\n  \n  const person = messages ? messages.filter(message => message.uid !== auth.currentUser.uid)[0] : null\n\n\n  return (\n    <Section>\n      <DivUsers>\n            {   person &&\n                //messages.filter(message => message.uid !== auth.currentUser.uid).map(message => {\n                    //return (\n                    <DivName key={person.uid}>\n                        <DivPic >\n                          <Image src=\"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\"/>\n                        </DivPic>\n                        <DivUserInfo> \n                            <span style={{ fontWeight: 500 }}>{person.uid}</span>\n                            <span>online</span>\n                            {/*<span>online</span>*/}\n                        </DivUserInfo>\n                    </DivName>//)\n            //})\n            }\n    </DivUsers>\n\n    <DivChatArea>\n            {/*<DivChatHeader></DivChatHeader>*/}\n                <DivMessageSections>\n                    <div style={{ textAlign: \"left\" }}>\n                        <TextMessage>\n                          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n                          <div ref={dummy}></div>\n                          {<div style={{ float:\"left\", clear: \"both\" }}\n                              ref={messagesEndRef}>\n                          </div>}\n                        </TextMessage>\n                    </div>\n                </DivMessageSections>\n                <DivChatControls onSubmit={sendMessage}>\n                    <Textarea \n                      placeholder=\"Happy chatting!\"\n                      value={formValue} \n                      onChange={(e) => setFormValue(e.target.value)} \n                    />\n                    <Button type=\"submit\">Send</Button>\n                </DivChatControls>\n        </DivChatArea>\n      \n      {/*<div className=\"\">\n        <div>\n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n          <div ref={dummy}></div>\n\n        </div>\n\n        <form onSubmit={sendMessage}> \n        \n          <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n\n          <button type=\"submit\">Send</button>\n\n\n        </form>\n          </div>*/}\n    </Section>\n  ) \n\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return ( \n    \n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}