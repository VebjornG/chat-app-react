{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vebjorng/testapp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport './App.css'; //import SignIn from \"./signin/signin\"\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport HeaderComponent from \"./components/header/header\";\nimport Layout from \"./components/layout/layout\";\nimport Card from \"./components/card/card\";\nimport { StyledLink, HeaderButton } from \"./components/header/headerStyles\";\nimport { Container, Section, DivChatArea, DivChatHeader, DivMessageSections, TextMessage, DivChatControls, Textarea, Button, DivUsers, DivName, DivPic, Image, DivUserInfo, SpanOnline, SpanOffline } from \"./styles/chatStyles\";\nimport { ContainerSignIn, CardButton, Form } from \"./components/card/cardStyles\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCW1V-XomyFj_pfzJg1WVxeVWJB7b7ARZI\",\n  authDomain: \"chat-for-testapp.firebaseapp.com\",\n  databaseURL: \"https://chat-for-testapp.firebaseio.com\",\n  projectId: \"chat-for-testapp\",\n  storageBucket: \"chat-for-testapp.appspot.com\",\n  messagingSenderId: \"285672943459\",\n  appId: \"1:285672943459:web:6942bbd53520a9ccdaed56\",\n  measurementId: \"G-VS992604ML\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user ? /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n        children: /*#__PURE__*/_jsxDEV(SignOut, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c = App;\n\nconst SignIn = () => {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerSignIn, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardButton, {\n          onClick: signInWithGoogle,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SignIn;\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(StyledLink, {\n    onClick: () => auth.signOut(),\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SignOut;\n\nfunction ChatRoom() {\n  _s2();\n\n  const [formValue, setFormValue] = useState(''); //const [inputValue, setInputValue] = useState(false)\n\n  const [chatStarted, setChatStarted] = useState(false);\n  const dummy = useRef(); // Reference to div under messages\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(40);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  }); // ??\n\n  console.log(messages);\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL,\n      email\n    } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      email\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }; //const messagesEndRef = useRef(null)         // Make new ref for scrolldown function\n\n\n  const scrollToBottom = () => {\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }; //debugger\n\n\n  useEffect(() => {\n    console.log(chatStarted);\n\n    if (chatStarted) {\n      scrollToBottom();\n    }\n  }, [messages]);\n\n  const User = props => {\n    const {\n      person,\n      onClick\n    } = props;\n    return /*#__PURE__*/_jsxDEV(DivName, {\n      onClick: () => onClick(person),\n      children: [/*#__PURE__*/_jsxDEV(DivPic, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DivUserInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 500\n          },\n          children: person.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SpanOnline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n\n  const initChat = person => {\n    setChatStarted(true);\n    console.log(person);\n  };\n\n  const person = messages ? messages.filter(message => message.uid !== auth.currentUser.uid)[0] : null; // Weakness: Depends on messages sent\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(DivUsers, {\n      children: person && /*#__PURE__*/_jsxDEV(User, {\n        person: person,\n        onClick: initChat\n      }, person.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DivChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(DivChatHeader, {\n        children: chatStarted ? `Talking to ${person.email} :)` : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DivMessageSections, {\n        children: chatStarted ?\n        /*#__PURE__*/\n        //scrollToBottom()\n        _jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextMessage, {\n            children: [messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n              message: msg\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 60\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: dummy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 22\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), chatStarted ? /*#__PURE__*/_jsxDEV(DivChatControls, {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Happy chatting!\",\n          value: formValue,\n          onChange: e => setFormValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: formValue === '',\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 22\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ChatRoom, \"grVehiWzM57XJN6CH0QeV+glrPI=\", false, function () {\n  return [useCollectionData];\n});\n\n_c4 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL\n  } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${messageClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SignIn\");\n$RefreshReg$(_c3, \"SignOut\");\n$RefreshReg$(_c4, \"ChatRoom\");\n$RefreshReg$(_c5, \"ChatMessage\");","map":{"version":3,"sources":["/home/vebjorng/testapp/src/App.js"],"names":["React","useEffect","useRef","useState","firebase","useAuthState","useCollectionData","HeaderComponent","Layout","Card","StyledLink","HeaderButton","Container","Section","DivChatArea","DivChatHeader","DivMessageSections","TextMessage","DivChatControls","Textarea","Button","DivUsers","DivName","DivPic","Image","DivUserInfo","SpanOnline","SpanOffline","ContainerSignIn","CardButton","Form","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","user","SignIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","formValue","setFormValue","chatStarted","setChatStarted","dummy","messagesRef","collection","query","orderBy","limit","messages","idField","console","log","sendMessage","e","preventDefault","uid","photoURL","email","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","scrollToBottom","User","props","person","onClick","fontWeight","initChat","filter","message","textAlign","map","msg","id","target","value","ChatMessage","messageClass"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n//import SignIn from \"./signin/signin\"\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport HeaderComponent from \"./components/header/header\"\nimport Layout from \"./components/layout/layout\"\nimport Card from \"./components/card/card\"\n\nimport { StyledLink, HeaderButton } from \"./components/header/headerStyles\"\n\nimport {  Container, \n          Section,\n          DivChatArea,\n          DivChatHeader,\n          DivMessageSections,\n          TextMessage,\n          DivChatControls,\n          Textarea,\n          Button,\n          DivUsers, \n          DivName,\n          DivPic,\n          Image,\n          DivUserInfo,\n          SpanOnline,\n          SpanOffline} from \"./styles/chatStyles\"\n\nimport {  ContainerSignIn,\n          CardButton,\n          Form } from \"./components/card/cardStyles\"\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCW1V-XomyFj_pfzJg1WVxeVWJB7b7ARZI\",\n    authDomain: \"chat-for-testapp.firebaseapp.com\",\n    databaseURL: \"https://chat-for-testapp.firebaseio.com\",\n    projectId: \"chat-for-testapp\",\n    storageBucket: \"chat-for-testapp.appspot.com\",\n    messagingSenderId: \"285672943459\",\n    appId: \"1:285672943459:web:6942bbd53520a9ccdaed56\",\n    measurementId: \"G-VS992604ML\"\n})\n\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth)\n\n  return (\n    <div className=\"App\">\n\n      {user ? \n        ( <Layout>\n            <HeaderComponent>\n              {/*`Logged in as ${auth.currentUser.uid}`*/}\n              <SignOut />\n            </HeaderComponent>\n            \n            <ChatRoom />\n          </Layout>) : (<SignIn/>)}  \n    </div>\n  );\n}\n\nconst SignIn = () => {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <Layout>\n      <HeaderComponent/>\n\n      <ContainerSignIn>\n        <Card>\n            <CardButton onClick={signInWithGoogle}>Sign in with Google</CardButton>\n        </Card>\n      </ContainerSignIn>\n    </Layout>\n  )\n}\n\n\nfunction SignOut() {\n  return auth.currentUser && (\n\n    <StyledLink onClick={() => auth.signOut()}>Logout</StyledLink>\n  )\n}\n\n\nfunction ChatRoom () {\n  const [formValue, setFormValue] = useState('');\n  //const [inputValue, setInputValue] = useState(false)\n  const [chatStarted, setChatStarted] = useState(false)\n\n  const dummy = useRef()                      // Reference to div under messages\n   \n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(40);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});  // ??\n\n  console.log(messages)\n\n\n\n\n  const sendMessage = async(e) => {\n\n    e.preventDefault();\n\n    const { uid, photoURL, email } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid, \n      photoURL,\n      email\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  //const messagesEndRef = useRef(null)         // Make new ref for scrolldown function\n\n  const scrollToBottom = () => {\n   dummy.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  //debugger\n  useEffect(() => {\n    console.log(chatStarted)\n    if (chatStarted) {\n      scrollToBottom();\n    }\n\n  }, [messages])\n\n\n\n  const User = (props) => {\n\n    const { person, onClick } = props\n\n    return (\n      <DivName onClick={() => onClick(person)}>\n          <DivPic >\n            <Image src=\"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\"/>\n          </DivPic>\n          <DivUserInfo> \n              <span style={{ fontWeight: 500 }}>{person.email}</span>\n              <SpanOnline />\n              {/*<span>online</span>*/}\n          </DivUserInfo>\n      </DivName>\n    )\n  }\n\n\n\n  const initChat = (person) => {\n    setChatStarted(true)\n    console.log(person)\n  }\n\n  \n  const person = messages ? messages.filter(message => message.uid !== auth.currentUser.uid)[0] : null  // Weakness: Depends on messages sent\n\n\n  return (\n    <Section>\n      <DivUsers>\n            {   person && <User key={person.uid} \n                                person={person}\n                                onClick={initChat}\n                          />\n            }\n    </DivUsers>\n\n    <DivChatArea>\n            <DivChatHeader>\n              {\n                chatStarted ? `Talking to ${person.email} :)` : null\n              }\n            </DivChatHeader>\n                <DivMessageSections>\n                  {\n                    chatStarted ?\n                    //scrollToBottom()\n                    (<div style={{ textAlign: \"left\" }}>\n                        <TextMessage>\n                          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n                          <div ref={dummy}></div>\n                          {/*<div ref={messagesEndRef}></div>*/}\n                        </TextMessage>\n                    </div>) : (null)\n                  }\n                </DivMessageSections>\n                {\n                  chatStarted ? \n                    (<DivChatControls onSubmit={sendMessage}>\n                      <Textarea \n                        placeholder=\"Happy chatting!\"\n                        value={formValue} \n                        onChange={(e) => setFormValue(e.target.value)} \n                      />\n                      <Button type=\"submit\" disabled={formValue ===''}>Send</Button>\n                    </DivChatControls>) : (null)\n                }\n        </DivChatArea>\n      \n      {/*<div className=\"\">\n        <div>\n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n          <div ref={dummy}></div>\n\n        </div>\n\n        <form onSubmit={sendMessage}> \n        \n          <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n\n          <button type=\"submit\">Send</button>\n\n\n        </form>\n          </div>*/}\n    </Section>\n  ) \n\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return ( \n    \n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}